{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/ecommerce/ecommerce.component.css","webpack:///./src/app/ecommerce/ecommerce.component.html","webpack:///./src/app/ecommerce/ecommerce.component.ts","webpack:///./src/app/ecommerce/models/product-order.model.ts","webpack:///./src/app/ecommerce/models/product-orders.model.ts","webpack:///./src/app/ecommerce/orders/orders.component.css","webpack:///./src/app/ecommerce/orders/orders.component.html","webpack:///./src/app/ecommerce/orders/orders.component.ts","webpack:///./src/app/ecommerce/products/products.component.css","webpack:///./src/app/ecommerce/products/products.component.html","webpack:///./src/app/ecommerce/products/products.component.ts","webpack:///./src/app/ecommerce/services/EcommerceService.ts","webpack:///./src/app/ecommerce/shopping-cart/shopping-cart.component.css","webpack:///./src/app/ecommerce/shopping-cart/shopping-cart.component.html","webpack:///./src/app/ecommerce/shopping-cart/shopping-cart.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error('Cannot find module \"' + req + '\".');\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \".container {\\n    padding-top: 65px;\\n}\\n\"","module.exports = \"<div class=\\\"container\\\">\\n    <app-ecommerce></app-ecommerce>\\n</div>\\n\"","import {Component} from '@angular/core';\nimport {EcommerceService} from \"./ecommerce/services/EcommerceService\";\n\n@Component({\n    selector: 'app-root',\n    templateUrl: './app.component.html',\n    styleUrls: ['./app.component.css'],\n    providers: [EcommerceService]\n})\nexport class AppComponent {\n\n}\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\nimport {FormsModule, ReactiveFormsModule} from '@angular/forms';\nimport {HttpClientModule} from '@angular/common/http';\n\nimport {AppComponent} from './app.component';\nimport {EcommerceComponent} from './ecommerce/ecommerce.component';\nimport {ProductsComponent} from './ecommerce/products/products.component';\nimport {ShoppingCartComponent} from './ecommerce/shopping-cart/shopping-cart.component';\nimport {OrdersComponent} from './ecommerce/orders/orders.component';\nimport {EcommerceService} from \"./ecommerce/services/EcommerceService\";\n\n@NgModule({\n    declarations: [\n        AppComponent,\n        EcommerceComponent,\n        ProductsComponent,\n        ShoppingCartComponent,\n        OrdersComponent\n    ],\n    imports: [\n        BrowserModule,\n        HttpClientModule,\n        FormsModule,\n        ReactiveFormsModule\n    ],\n    providers: [EcommerceService],\n    bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","module.exports = \"\"","module.exports = \"<nav class=\\\"navbar navbar-expand-lg navbar-dark bg-dark fixed-top\\\">\\n    <div class=\\\"container\\\">\\n        <a class=\\\"navbar-brand\\\" href=\\\"#\\\">Baeldung Ecommerce</a>\\n        <button class=\\\"navbar-toggler\\\" type=\\\"button\\\" data-toggle=\\\"collapse\\\"\\n                data-target=\\\"#navbarResponsive\\\" aria-controls=\\\"navbarResponsive\\\"\\n                aria-expanded=\\\"false\\\" aria-label=\\\"Toggle navigation\\\" (click)=\\\"toggleCollapsed()\\\">\\n            <span class=\\\"navbar-toggler-icon\\\"></span>\\n        </button>\\n        <div id=\\\"navbarResponsive\\\" [ngClass]=\\\"{'collapse': collapsed, 'navbar-collapse': true}\\\">\\n            <ul class=\\\"navbar-nav ml-auto\\\">\\n                <li class=\\\"nav-item active\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"#\\\" (click)=\\\"reset()\\\">Home\\n                        <span class=\\\"sr-only\\\">(current)</span>\\n                    </a>\\n                </li>\\n            </ul>\\n        </div>\\n    </div>\\n</nav>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-9\\\">\\n        <app-products #productsC [hidden]=\\\"orderFinished\\\"></app-products>\\n    </div>\\n    <div class=\\\"col-md-3\\\">\\n        <app-shopping-cart (onOrderFinished)=finishOrder($event) #shoppingCartC\\n                           [hidden]=\\\"orderFinished\\\"></app-shopping-cart>\\n    </div>\\n    <div class=\\\"col-md-6 offset-3\\\">\\n        <app-orders #ordersC [hidden]=\\\"!orderFinished\\\"></app-orders>\\n    </div>\\n</div>\\n\"","import {Component, OnInit, ViewChild} from '@angular/core';\nimport {ProductsComponent} from \"./products/products.component\";\nimport {ShoppingCartComponent} from \"./shopping-cart/shopping-cart.component\";\nimport {OrdersComponent} from \"./orders/orders.component\";\n\n@Component({\n    selector: 'app-ecommerce',\n    templateUrl: './ecommerce.component.html',\n    styleUrls: ['./ecommerce.component.css']\n})\nexport class EcommerceComponent implements OnInit {\n    private collapsed = true;\n    orderFinished = false;\n\n    @ViewChild('productsC')\n    productsC: ProductsComponent;\n\n    @ViewChild('shoppingCartC')\n    shoppingCartC: ShoppingCartComponent;\n\n    @ViewChild('ordersC')\n    ordersC: OrdersComponent;\n\n    constructor() {\n    }\n\n    ngOnInit() {\n    }\n\n    toggleCollapsed(): void {\n        this.collapsed = !this.collapsed;\n    }\n\n    finishOrder(orderFinished: boolean) {\n        this.orderFinished = orderFinished;\n    }\n\n    reset() {\n        this.orderFinished = false;\n        this.productsC.reset();\n        this.shoppingCartC.reset();\n        this.ordersC.paid = false;\n    }\n}\n","import {Product} from \"./product.model\";\n\nexport class ProductOrder {\n    product: Product;\n    quantity: number;\n\n    constructor(product: Product, quantity: number) {\n        this.product = product;\n        this.quantity = quantity;\n    }\n}\n","import {ProductOrder} from \"./product-order.model\";\n\nexport class ProductOrders {\n    productOrders: ProductOrder[] = [];\n}\n","module.exports = \"\"","module.exports = \"<h2 class=\\\"text-center\\\">ORDER</h2>\\n<ul>\\n    <li *ngFor=\\\"let order of orders.productOrders\\\">\\n        {{ order.product.name }} - ${{ order.product.price }} x {{ order.quantity}} pcs.\\n    </li>\\n</ul>\\n<h3 class=\\\"text-right\\\">Total amount: ${{ total }}</h3>\\n\\n<button class=\\\"btn btn-primary btn-block\\\" (click)=\\\"pay()\\\" *ngIf=\\\"!paid\\\">Pay</button>\\n\\n<div class=\\\"alert alert-success\\\" role=\\\"alert\\\" *ngIf=\\\"paid\\\">\\n    <strong>Congratulation!</strong> You successfully made the order.\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {EcommerceService} from \"../services/EcommerceService\";\n\n@Component({\n    selector: 'app-orders',\n    templateUrl: './orders.component.html',\n    styleUrls: ['./orders.component.css']\n})\nexport class OrdersComponent implements OnInit {\n    orders: ProductOrders;\n    total: number;\n    paid: boolean;\n    sub: Subscription;\n\n    constructor(private ecommerceService: EcommerceService) {\n        this.orders = this.ecommerceService.ProductOrders;\n    }\n\n    ngOnInit() {\n        this.paid = false;\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.orders = this.ecommerceService.ProductOrders;\n        });\n        this.loadTotal();\n    }\n\n    pay() {\n        this.paid = true;\n        this.ecommerceService.saveOrder(this.orders).subscribe();\n    }\n\n    loadTotal() {\n        this.sub = this.ecommerceService.TotalChanged.subscribe(() => {\n            this.total = this.ecommerceService.Total;\n        });\n    }\n}\n","module.exports = \".padding-0 {\\n    padding-right: 0;\\n    padding-left: 1;\\n}\\n\"","module.exports = \"<div class=\\\"row card-deck\\\">\\n    <div class=\\\"col-lg-4 col-md-6 mb-4\\\" *ngFor=\\\"let order of productOrders\\\">\\n        <div class=\\\"card text-center\\\">\\n            <div class=\\\"card-header\\\">\\n                <h4>{{order.product.name}}</h4>\\n            </div>\\n            <div class=\\\"card-body\\\">\\n                <a href=\\\"#\\\"><img class=\\\"card-img-top\\\" src={{order.product.pictureUrl}} alt=\\\"\\\"></a>\\n                <h5 class=\\\"card-title\\\">${{order.product.price}}</h5>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-4 padding-0\\\" *ngIf=\\\"!isProductSelected(order.product)\\\">\\n                        <input type=\\\"number\\\" min=\\\"0\\\" class=\\\"form-control\\\" [(ngModel)]=order.quantity>\\n                    </div>\\n                    <div class=\\\"col-4 padding-0\\\" *ngIf=\\\"!isProductSelected(order.product)\\\">\\n                        <button class=\\\"btn btn-primary\\\" (click)=\\\"addToCart(order)\\\"\\n                                [disabled]=\\\"order.quantity <= 0\\\">Add To Cart\\n                        </button>\\n                    </div>\\n                    <div class=\\\"col-12\\\" *ngIf=\\\"isProductSelected(order.product)\\\">\\n                        <button class=\\\"btn btn-primary btn-block\\\"\\n                                (click)=\\\"removeFromCart(order)\\\">Remove From Cart\\n                        </button>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\"","import {Component, OnInit} from '@angular/core';\nimport {ProductOrder} from \"../models/product-order.model\";\nimport {EcommerceService} from \"../services/EcommerceService\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {Product} from \"../models/product.model\";\n\n@Component({\n    selector: 'app-products',\n    templateUrl: './products.component.html',\n    styleUrls: ['./products.component.css']\n})\nexport class ProductsComponent implements OnInit {\n    productOrders: ProductOrder[] = [];\n    products: Product[] = [];\n    selectedProductOrder: ProductOrder;\n    private shoppingCartOrders: ProductOrders;\n    sub: Subscription;\n    productSelected: boolean = false;\n\n    constructor(private ecommerceService: EcommerceService) {\n    }\n\n    ngOnInit() {\n        this.productOrders = [];\n        this.loadProducts();\n        this.loadOrders();\n    }\n\n    addToCart(order: ProductOrder) {\n        this.ecommerceService.SelectedProductOrder = order;\n        this.selectedProductOrder = this.ecommerceService.SelectedProductOrder;\n        this.productSelected = true;\n    }\n\n    removeFromCart(productOrder: ProductOrder) {\n        let index = this.getProductIndex(productOrder.product);\n        if (index > -1) {\n            this.shoppingCartOrders.productOrders.splice(\n                this.getProductIndex(productOrder.product), 1);\n        }\n        this.ecommerceService.ProductOrders = this.shoppingCartOrders;\n        this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n        this.productSelected = false;\n    }\n\n    getProductIndex(product: Product): number {\n        return this.ecommerceService.ProductOrders.productOrders.findIndex(\n            value => value.product === product);\n    }\n\n    isProductSelected(product: Product): boolean {\n        return this.getProductIndex(product) > -1;\n    }\n\n    loadProducts() {\n        this.ecommerceService.getAllProducts()\n            .subscribe(\n                (products: any[]) => {\n                    this.products = products;\n                    this.products.forEach(product => {\n                        this.productOrders.push(new ProductOrder(product, 0));\n                    })\n                },\n                (error) => console.log(error)\n            );\n    }\n\n    loadOrders() {\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.shoppingCartOrders = this.ecommerceService.ProductOrders;\n        });\n    }\n\n    reset() {\n        this.productOrders = [];\n        this.loadProducts();\n        this.ecommerceService.ProductOrders.productOrders = [];\n        this.loadOrders();\n        this.productSelected = false;\n    }\n}\n","import {ProductOrder} from \"../models/product-order.model\";\nimport {Subject} from \"rxjs/internal/Subject\";\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {HttpClient} from '@angular/common/http';\nimport {Injectable} from \"@angular/core\";\n\n@Injectable()\nexport class EcommerceService {\n    private productsUrl = \"/api/products\";\n    private ordersUrl = \"/api/orders\";\n\n    private productOrder: ProductOrder;\n    private orders: ProductOrders = new ProductOrders();\n\n    private productOrderSubject = new Subject();\n    private ordersSubject = new Subject();\n    private totalSubject = new Subject();\n\n    private total: number;\n\n    ProductOrderChanged = this.productOrderSubject.asObservable();\n    OrdersChanged = this.ordersSubject.asObservable();\n    TotalChanged = this.totalSubject.asObservable();\n\n    constructor(private http: HttpClient) {\n    }\n\n    getAllProducts() {\n        return this.http.get(this.productsUrl);\n    }\n\n    saveOrder(order: ProductOrders) {\n        return this.http.post(this.ordersUrl, order);\n    }\n\n    set SelectedProductOrder(value: ProductOrder) {\n        this.productOrder = value;\n        this.productOrderSubject.next();\n    }\n\n    get SelectedProductOrder() {\n        return this.productOrder;\n    }\n\n    set ProductOrders(value: ProductOrders) {\n        this.orders = value;\n        this.ordersSubject.next();\n    }\n\n    get ProductOrders() {\n        return this.orders;\n    }\n\n    get Total() {\n        return this.total;\n    }\n\n    set Total(value: number) {\n        this.total = value;\n        this.totalSubject.next();\n    }\n}\n","module.exports = \"\"","module.exports = \"<div class=\\\"card text-white bg-danger mb-3\\\" style=\\\"max-width: 18rem;\\\">\\n    <div class=\\\"card-header text-center\\\">Shopping Cart</div>\\n    <div class=\\\"card-body\\\">\\n        <h5 class=\\\"card-title\\\">Total: ${{total}}</h5>\\n        <hr>\\n        <h6 class=\\\"card-title\\\">Items bought:</h6>\\n\\n        <ul>\\n            <li *ngFor=\\\"let order of orders.productOrders\\\">\\n                {{ order.product.name }} - {{ order.quantity}} pcs.\\n            </li>\\n        </ul>\\n\\n        <button class=\\\"btn btn-light btn-block\\\" (click)=\\\"finishOrder()\\\"\\n                [disabled]=\\\"orders.productOrders.length == 0\\\">Checkout\\n        </button>\\n    </div>\\n</div>\\n\"","import {Component, EventEmitter, OnDestroy, OnInit, Output} from '@angular/core';\nimport {ProductOrders} from \"../models/product-orders.model\";\nimport {ProductOrder} from \"../models/product-order.model\";\nimport {EcommerceService} from \"../services/EcommerceService\";\nimport {Subscription} from \"rxjs/internal/Subscription\";\n\n@Component({\n    selector: 'app-shopping-cart',\n    templateUrl: './shopping-cart.component.html',\n    styleUrls: ['./shopping-cart.component.css']\n})\nexport class ShoppingCartComponent implements OnInit, OnDestroy {\n    orderFinished: boolean;\n    orders: ProductOrders;\n    total: number;\n    sub: Subscription;\n\n    @Output() onOrderFinished: EventEmitter<boolean>;\n\n    constructor(private ecommerceService: EcommerceService) {\n        this.total = 0;\n        this.orderFinished = false;\n        this.onOrderFinished = new EventEmitter<boolean>();\n    }\n\n    ngOnInit() {\n        this.orders = new ProductOrders();\n        this.loadCart();\n        this.loadTotal();\n    }\n\n    private calculateTotal(products: ProductOrder[]): number {\n        let sum = 0;\n        products.forEach(value => {\n            sum += (value.product.price * value.quantity);\n        });\n        return sum;\n    }\n\n    ngOnDestroy() {\n        this.sub.unsubscribe();\n    }\n\n    finishOrder() {\n        this.orderFinished = true;\n        this.ecommerceService.Total = this.total;\n        this.onOrderFinished.emit(this.orderFinished);\n    }\n\n    loadTotal() {\n        this.sub = this.ecommerceService.OrdersChanged.subscribe(() => {\n            this.total = this.calculateTotal(this.orders.productOrders);\n        });\n    }\n\n    loadCart() {\n        this.sub = this.ecommerceService.ProductOrderChanged.subscribe(() => {\n            let productOrder = this.ecommerceService.SelectedProductOrder;\n            if (productOrder) {\n                this.orders.productOrders.push(new ProductOrder(\n                    productOrder.product, productOrder.quantity));\n            }\n            this.ecommerceService.ProductOrders = this.orders;\n            this.orders = this.ecommerceService.ProductOrders;\n            this.total = this.calculateTotal(this.orders.productOrders);\n        });\n    }\n\n    reset() {\n        this.orderFinished = false;\n        this.orders = new ProductOrders();\n        this.orders.productOrders = []\n        this.loadTotal();\n        this.total = 0;\n    }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build ---prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * In development mode, to ignore zone related error stack frames such as\n * `zone.run`, `zoneDelegate.invokeTask` for easier debugging, you can\n * import the following file, but please comment it out in production mode\n * because it will have performance impact when throw error\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.log(err));\n"],"sourceRoot":""}